

        width(1..max_width).
        height(1..max_height).

        tile_types(grass; air; obstacle;  start; hole).

        1{tile(XX,YY,Type): tile_types(Type)}1 :- width(XX), height(YY).

        :- {tile(_,_,hole)} != 1.
        :- {tile(_,_,start)} != 1.
    
        
        move(0, XX,YY) :- tile(XX,YY,start).
        :- tile(XX,YY,hole), not move(_,XX,YY).
        :- tile(XX,YY,hole), move(Min, XX,YY), Min < min_moves.
        moves(1..max_moves).

        move_tiles(hole;start;grass).
        max_jumps(min_jump..max_jump).
        mid_jumps(1..max_jump-1).
        

        move(T+1, X1,Y1) :- move(X1,Y1,X2,Y2), move(T,X2,Y2), moves(T+1).

        %%move between two move_tiles with a Jump
        move(XX,YY,XX+Jump,YY) :- tile(XX,YY,Tile), move_tiles(Tile), move(T,XX+Jump,YY), moves(T+1), max_jumps(Jump).
        move(XX,YY,XX-Jump,YY) :- tile(XX,YY,Tile), move_tiles(Tile), move(T,XX-Jump,YY), moves(T+1), max_jumps(Jump).
        move(XX,YY,XX,YY+Jump) :- tile(XX,YY,Tile), move_tiles(Tile), move(T,XX,YY+Jump), moves(T+1), max_jumps(Jump).
        move(XX,YY,XX,YY-Jump) :- tile(XX,YY,Tile), move_tiles(Tile), move(T,XX,YY-Jump), moves(T+1), max_jumps(Jump).

        %%cannot jump over a obstacle block
        :- move(X1,Y1,X2,Y2), tile(X1+Mid_Point, Y1, obstacle), mid_jumps(Mid_Point), X2 - X1 - Mid_Point > 0, X2 > X1.
        :- move(X1,Y1,X2,Y2), tile(X1-Mid_Point, Y1, obstacle), mid_jumps(Mid_Point), X1 - X2 - Mid_Point > 0, X2 < X1.
        :- move(X1,Y1,X2,Y2), tile(X1, Y1+Mid_Point, obstacle), mid_jumps(Mid_Point), Y2 - Y1 - Mid_Point > 0, Y2 > Y1.
        :- move(X1,Y1,X2,Y2), tile(X1, Y1-Mid_Point, obstacle), mid_jumps(Mid_Point), Y1 - Y2 - Mid_Point > 0, Y2 < Y1.
        
     :- move(5, 10, 5, 7). 
 :- move(5, 7, 8, 7). 
 :- move(8, 7, 9, 7). 
 :- move(9, 7, 9, 10). 
 :- move(5, 7, 5, 6). 
 :- move(5, 6, 8, 6). 
 :- move(8, 6, 10, 6). 
 :- move(10, 6, 10, 7). 
 :- move(10, 7, 10, 10). 
 :- move(5, 6, 4, 6). 
 :- move(4, 6, 4, 7). 
 :- move(4, 7, 7, 7). 
 :- move(7, 7, 8, 7). 
 :- move(8, 7, 8, 10). 
 :- move(4, 6, 3, 6). 
 :- move(3, 6, 3, 7). 
 :- move(3, 7, 6, 7). 
 :- move(6, 7, 7, 7). 
 :- move(7, 7, 7, 10). 
 :- move(3, 6, 2, 6). 
 :- move(2, 6, 2, 7). 
 :- move(2, 7, 4, 7). 
 :- move(4, 7, 6, 7). 
 :- move(6, 7, 6, 10). 

            ground(XX,YY) :- tile(XX,YY,grass).
            ground(XX,YY) :- tile(XX,YY,hole).
            ground(XX,YY) :- tile(XX,YY,obstacle).
            ground(XX,YY) :- tile(XX,YY,start).

            :- Count = {tile(XX,YY, air): tile(XX -1, YY, air), width(XX), height(YY)}, Count < 1.
        